apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: aerospikeclusters.aerospike.com
spec:
  group: aerospike.com
  names:
    kind: AerospikeCluster
    listKind: AerospikeClusterList
    plural: aerospikeclusters
    singular: aerospikecluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AerospikeCluster is the Schema for the aerospikeclusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AerospikeClusterSpec defines the desired state of AerospikeCluster
          properties:
            aerospikeAccessControl:
              description: AerospikeAccessControl has the Aerospike roles and users
                definitions. Required if aerospike cluster security is enabled.
              properties:
                adminPolicy:
                  description: AerospikeClientAdminPolicy specify the aerospike client
                    admin policy for access control operations.
                  properties:
                    timeout:
                      description: Timeout for admin client policy in milliseconds.
                      type: integer
                  required:
                  - timeout
                  type: object
                roles:
                  description: Roles is the set of roles to allow on the Aerospike
                    cluster.
                  items:
                    description: AerospikeRoleSpec specifies an Aerospike database
                      role and its associated privileges.
                    properties:
                      name:
                        description: Name of this role.
                        type: string
                      privileges:
                        description: Privileges granted to this role.
                        items:
                          type: string
                        type: array
                      whitelist:
                        description: Whitelist of host address allowed for this role.
                        items:
                          type: string
                        type: array
                    required:
                    - name
                    - privileges
                    type: object
                  type: array
                users:
                  description: Users is the set of users to allow on the Aerospike
                    cluster.
                  items:
                    description: AerospikeUserSpec specifies an Aerospike database
                      user, the secret name for the password and, associated roles.
                    properties:
                      name:
                        description: Name is the user's username.
                        type: string
                      roles:
                        description: Roles is the list of roles granted to the user.
                        items:
                          type: string
                        type: array
                      secretName:
                        description: 'SecretName has secret info created by user.
                          User needs to create this secret from password literal.
                          eg: kubectl create secret generic dev-db-secret --from-literal=password=''password'''
                        type: string
                    required:
                    - name
                    - roles
                    - secretName
                    type: object
                  type: array
              required:
              - users
              type: object
            aerospikeConfig:
              description: AerospikeConfig sets config in aerospike.conf file. Other
                configs are taken as default
            aerospikeConfigSecret:
              description: AerospikeConfigSecret has secret info created by user.
                User needs to create this secret having tls files, feature key for
                cluster
              properties:
                mountPath:
                  type: string
                secretName:
                  type: string
              required:
              - mountPath
              - secretName
              type: object
            build:
              description: Aerospike cluster build
              type: string
            multiPodPerHost:
              description: "If set true then multiple pods can be created per Kubernetes
                Node. This will create a NodePort service for each Pod. NodePort,
                as the name implies, opens a specific port on all the Kubernetes Nodes
                , and any traffic that is sent to this port is forwarded to the service.
                Here service picks a random port in range (30000-32767), so these
                port should be open. \n If set false then only single pod can be created
                per Kubernetes Node. This will create Pods using hostPort setting.
                The container port will be exposed to the external network at <hostIP>:<hostPort>,
                where the hostIP is the IP address of the Kubernetes Node where the
                container is running and the hostPort is the port requested by the
                user."
              type: boolean
            rackConfig:
              description: RackConfig
              properties:
                namespaces:
                  description: List of Aerospike namespaces for which rack feature
                    will be enabled If list empty then all namespaces are rack enabled
                  items:
                    type: string
                  type: array
                racks:
                  items:
                    description: Rack specifies single rack config
                    properties:
                      aerospikeConfig:
                        description: AerospikeConfig override the common AerospikeConfig
                          for this Rack
                      id:
                        type: integer
                      nodeName:
                        type: string
                      rackLabel:
                        description: Node should have a label {key:RackLabel, value:<RackLable>}
                        type: string
                      region:
                        type: string
                      zone:
                        type: string
                    required:
                    - id
                    type: object
                  type: array
              required:
              - racks
              type: object
            resources:
              description: Define resources requests and limits for Aerospike Server
                Container. Please contact aerospike for proper sizing exercise Only
                Memory and Cpu resources can be given Resources.Limits should be more
                than Resources.Requests.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            size:
              description: Aerospike cluster size
              format: int32
              type: integer
            storage:
              description: Storage specified persistent storage to use for the Aerospike
                pods.
              properties:
                blockVolumePolicy:
                  description: BlockVolumePolicy contains default policies for block
                    volumes.
                  properties:
                    cascadeDelete:
                      description: CascadeDelete determines if the persistent volumes
                        are deleted after the pod this volume binds to is terminated
                        and removed from the cluster. Defaults to true.
                      type: boolean
                    initMethod:
                      description: InitMethod determines how volumes attached to Aerospike
                        server pods are initialized when the pods comes up the first
                        time. Defaults to "none".
                      enum:
                      - none
                      - dd
                      - blkdiscard
                      - deleteFiles
                      type: string
                  required:
                  - cascadeDelete
                  - initMethod
                  type: object
                filesystemVolumePolicy:
                  description: FileSystemVolumePolicy contains default policies for
                    filesystem volumes.
                  properties:
                    cascadeDelete:
                      description: CascadeDelete determines if the persistent volumes
                        are deleted after the pod this volume binds to is terminated
                        and removed from the cluster. Defaults to true.
                      type: boolean
                    initMethod:
                      description: InitMethod determines how volumes attached to Aerospike
                        server pods are initialized when the pods comes up the first
                        time. Defaults to "none".
                      enum:
                      - none
                      - dd
                      - blkdiscard
                      - deleteFiles
                      type: string
                  required:
                  - cascadeDelete
                  - initMethod
                  type: object
                volumes:
                  description: Volumes is the list of to attach to created pods.
                  items:
                    description: AerospikePersistentVolumeSpec describes a persistent
                      volume to claim and attach to Aerospike pods.
                    properties:
                      path:
                        description: Path is the device path where block 'block' mode
                          volumes are attached to the pod or the mount path for 'filesystem'
                          mode.
                        type: string
                      sizeInGB:
                        description: SizeInGB Size of volume in GB.
                        format: int32
                        type: integer
                      storageClass:
                        description: StorageClass should be pre-created by user.
                        type: string
                      volumeMode:
                        description: VolumeMode specifies if the volume is block/raw
                          or a filesystem.
                        enum:
                        - filesystem
                        - block
                        type: string
                    required:
                    - path
                    - sizeInGB
                    - storageClass
                    - volumeMode
                    type: object
                  type: array
              type: object
            validationPolicy:
              description: ValidationPolicy controls validation of the Aerospike cluster
                resource.
              properties:
                skipWorkDirValidate:
                  description: skipWorkDirValidate validates that Aerospike work directory
                    is mounted on a persistent file storage. Defaults to false.
                  type: boolean
                skipXdrDlogFileValidate:
                  description: ValidateXdrDigestLogFile validates that xdr digest
                    log file is mounted on a persistent file storage. Defaults to
                    false.
                  type: boolean
              required:
              - skipWorkDirValidate
              - skipXdrDlogFileValidate
              type: object
          required:
          - aerospikeConfig
          - build
          - resources
          - size
          type: object
        status:
          description: AerospikeClusterStatus defines the observed state of AerospikeCluster
          properties:
            nodes:
              description: Nodes contains Aerospike node specific  state of cluster.
              items:
                description: AerospikeNodeSummary defines the observed state of AerospikeClusterNode
                properties:
                  build:
                    type: string
                  clusterName:
                    type: string
                  ip:
                    type: string
                  nodeID:
                    type: string
                  podName:
                    type: string
                  port:
                    type: integer
                  rackID:
                    description: RackID of rack to which this node belongs
                    type: integer
                  tlsname:
                    type: string
                required:
                - build
                - clusterName
                - ip
                - nodeID
                - podName
                - port
                - rackID
                - tlsname
                type: object
              type: array
            podStatus:
              additionalProperties:
                description: AerospikePodStatus contains the Aerospike specific status
                  of the Aerospike serverpods.
                properties:
                  initializedVolumePaths:
                    description: InitializedVolumePaths is the list of device path
                      that have already been initialized.
                    items:
                      type: string
                    type: array
                required:
                - initializedVolumePaths
                type: object
              description: PodStatus has Aerospike specific status of the pods. This
                is map instead of the conventional map as list convention to allow
                each pod to patch update its status. The map key is the name of the
                pod.
              type: object
          required:
          - nodes
          - podStatus
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
