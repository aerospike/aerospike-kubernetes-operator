# Operator
{{ include "validateDeprecateFields" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "aerospike-kubernetes-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: &Labels
    app: {{ template "aerospike-kubernetes-operator.fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    {{- with .Values.labels }}{{ toYaml . | nindent 4 }}{{ end }}
  {{- with .Values.annotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      <<: *Labels
      {{- with .Values.podLabels }}{{ toYaml . | nindent 6 }}{{ end }}
  template:
    metadata:
      labels:
        <<: *Labels
        {{- with .Values.podLabels }}{{ toYaml . | nindent 8 }}{{ end }}
      annotations:
        {{- with .Values.podAnnotations }}{{ toYaml . | nindent 8 }}{{ end }}
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "aerospike-kubernetes-operator.fullname" . }}{{ else }}{{ .Values.rbac.serviceAccountName }}{{ end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: manager
        image: {{ .Values.operatorImage.repository }}:{{ .Values.operatorImage.tag }}
        command:
        - "/manager"
        args:
          - --config=controller_manager_config.yaml
        imagePullPolicy: {{ .Values.operatorImage.pullPolicy }}
        ports:
        - name: webhook-server
          containerPort: {{ .Values.webhookService.targetPort }}
          protocol: TCP
        env:
        - name: WATCH_NAMESPACE
          value: {{ .Values.watchNamespaces | quote }}
        - name: AEROSPIKE_KUBERNETES_INIT_REGISTRY
          value: {{ .Values.aerospikeKubernetesInitRegistry }}
        {{- if .Values.extraEnv }}
        {{- range $key, $value := .Values.extraEnv }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        {{- end }}
        # Downward API
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
        {{- with .Values.resources }}
        resources: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.securityContext }}
        securityContext: {{- toYaml . | nindent 10 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.healthPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.healthPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
      - name: kube-rbac-proxy
        image: {{ .Values.kubeRBACProxy.image.repository }}:{{ .Values.kubeRBACProxy.image.tag }}
        imagePullPolicy: {{ .Values.kubeRBACProxy.image.pullPolicy }}
        args:
        - --secure-listen-address=0.0.0.0:{{ .Values.kubeRBACProxy.port }}
        - --upstream=http://127.0.0.1:{{ .Values.metricsPort }}/
        - --logtostderr=true
        - --v=0
        ports:
        - containerPort: {{ .Values.kubeRBACProxy.port }}
          name: https
          protocol: TCP
        {{- with .Values.kubeRBACProxy.resources }}
        resources: {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
        - configMap:
            name: {{ template "aerospike-kubernetes-operator.fullname" . }}
          name: manager-config
        # TODO: Make adding volumes configurable.
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ .Values.certs.webhookServerCertSecretName }}
